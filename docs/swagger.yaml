openapi: 3.0.0
info:
  title: API Users
  description: Documentación de la API para el módulo Users
  version: "1.0.0"

servers:
  - url: http://localhost:3000/api

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{uid}:
    get:
      summary: Obtener usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          schema:
            type: string
          required: true
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Eliminar usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          schema:
            type: string
          required: true
          description: ID del usuario
      responses:
        '200':
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario eliminado
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "64a7c7a6f1234567890abcdef"
        first_name:
          type: string
          example: Juan
        last_name:
          type: string
          example: Pérez
        email:
          type: string
          example: juan.perez@example.com
        password:
          type: string
          example: "123456"
        role:
          type: string
          example: user
        pets:
          type: array
          items:
            type: string
            example: "64a7c7a6f1234567890abcdea"
    UserInput:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
        pets:
          type: array
          items:
            type: string
      required:
        - first_name
        - last_name
        - email
        - password
    Error:
      type: object
      properties:
        error:
          type: string
          example: Error message
